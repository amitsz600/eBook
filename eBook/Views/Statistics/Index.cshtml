
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Statistics</h2>
<div class="row">
    <div class="col-md-6">
        <h4>Number of books per genre</h4>
        <svg class="genre-chart"/>
    </div>
    <div class="col-md-6">
        <h4>Avarege umber of comment for a book per month</h4>
        <div class="comments-chart"></div>
    </div>
</div>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/d3")
<script>
    var margin = 60;
    var width = 480 ;
    var height = 380;

    $.get("/Books/GetGroupsByGenre",
        function (data) {
            var maxSize = 1;

            data.forEach(function (item) {
                maxSize < item.Count;
                maxSize = item.Count;
            });
            
            var svg = d3.select('.genre-chart');
            var chart = svg.append('g');

            const xScale = d3.scaleBand()
                .range([0, width])
                .domain(data.map((g) => g.genre))
                .padding(0.2)

            chart.append('g')
                .attr('transform', `translate(0, ${height})`)
                .call(d3.axisBottom(xScale));

            chart.selectAll()
                .data(data)
                .enter()
                .append('rect')
                .attr('x', (g) => xScale(g.genre))
                .attr('y', (g) => height - ((g.Count / maxSize * 0.75) * height))
                .attr('height', (g) => ((g.Count / maxSize * 0.75) * height))
                .attr('width', xScale.bandwidth());

            chart.selectAll()
                .data(data).enter().append('text')
                .attr('class', 'divergence')
                .attr('x', (g) => xScale(g.genre) + xScale.bandwidth() / 2)
                .attr('y', (g) => height - ((g.Count / maxSize * 0.75) * height) + 20)
                .attr('fill', 'white')
                .attr('text-anchor', 'middle')
                .text((g, idx) => {
                    const divergence = (g.Count);
                    let text = '';
                    if (divergence > 0);
                    text += `${divergence}`;
                    return text;
                });
                

        });

    $.get("/Comments/GetAverageNumberForBooksPerMonth",
        function (data) {
            var maxSize = 1;
            var month = [{}];
            data.forEach(function (item) {
                maxSize < item.Count;
                maxSize = item.Count;
            });
            
            var svg = d3.select('.comments-chart');
            var chart = svg.append('g');

            const xScale = d3.scaleBand()
                .range([0, width])
                .domain(data.map((g) => g.genre))
                .padding(0.2)

            chart.append('g')
                .attr('transform', `translate(0, ${height})`)
                .call(d3.axisBottom(xScale));

            chart.selectAll()
                .data(data)
                .enter()
                .append('rect')
                .attr('x', (g) => xScale(g.genre))
                .attr('y', (g) => height - ((g.Count / maxSize * 0.75) * height))
                .attr('height', (g) => ((g.Count / maxSize * 0.75) * height))
                .attr('width', xScale.bandwidth());

            chart.selectAll()
                .data(data).enter().append('text')
                .attr('class', 'divergence')
                .attr('x', (g) => xScale(g.genre) + xScale.bandwidth() / 2)
                .attr('y', (g) => height - ((g.Count / maxSize * 0.75) * height) + 20)
                .attr('fill', 'white')
                .attr('text-anchor', 'middle')
                .text((g, idx) => {
                    const divergence = (g.Count);
                    let text = '';
                    if (divergence > 0);
                    text += `${divergence}`;
                    return text;
                });
                

        });
</script>

