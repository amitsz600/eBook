
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Statistics</h2>
<div class="row">
    <div class="col-md-6">
        <h5>Number of books per genre</h5>
        <svg class="genre-chart"/>
    </div>
    <div class="col-md-6">
        <h5>Avarege number of comment for a book per month</h5>
        <svg class="comments-chart"></svg>
    </div>
</div>
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/d3")
<script>
    var width = 530 ;
    var height = 380;

    $.get("/Books/GetGroupsByGenre",
        function (data) {
            var maxSize = 1;

            data.forEach(function (item) {
                if (maxSize < item.Count) {
                    maxSize = item.Count;
                }
            });
            
            var svgGenre = d3.select('.genre-chart');
            var chartGenre = svgGenre.append('g');

            var xScale = d3.scaleBand()
                .range([0, width])
                .domain(data.map((g) => g.genre))
                .padding(0.2)

            chartGenre.append('g')
                .attr('transform', `translate(0, ${height})`)
                .call(d3.axisBottom(xScale));

            chartGenre.selectAll()
                .data(data)
                .enter()
                .append('rect')
                .attr('x', (g) => xScale(g.genre))
                .attr('y', (g) => height - ((g.Count / maxSize) * height))
                .attr('height', (g) => ((g.Count / maxSize) * height))
                .attr('width', xScale.bandwidth());

            chartGenre.selectAll()
                .data(data).enter().append('text')
                .attr('class', 'divergence')
                .attr('x', (g) => xScale(g.genre) + xScale.bandwidth() / 2)
                .attr('y', (g) => height - ((g.Count / maxSize) * height) + 20)
                .attr('fill', 'white')
                .attr('text-anchor', 'middle')
                .text((g, idx) => {
                    var divergence = (g.Count);
                    var text = '';
                    if (divergence > 0);
                    text += `${divergence}`;
                    return text;
                });
                

        });

    $.get("/Comments/GetAverageNumberForBooksPerMonth",
        function (data) {
            var maxSize = 1;
            var months = [];
            var monthNames = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun","Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ];
            
            data.forEach(function (item) {
                if (maxSize < item.Count) {
                    maxSize = item.Count;
                }
                
                
                if (months.length + 1 != item.Month) {
                    for (i = months.length + 1; i < item.Month; i++) {
                        months.push({ Month: monthNames[i - 1], Count: 0 });
                    }
                }

                item.Count = item.Count.toFixed(1);
                item.Month = monthNames[item.Month - 1];
                months.push(item);
            });

            if (months.length != 12) {
                for (i = months.length + 1; i <= 12; i++) {
                        months.push({ Month: monthNames[i - 1], Count: 0 });
                }
            }
            
            var svgComments = d3.select('.comments-chart');
            var chartComments = svgComments.append('g');

            var xScale = d3.scaleBand()
                .range([0, width])
                .domain(months.map((g) => g.Month))
                .padding(0.2)

            chartComments.append('g')
                .attr('transform', `translate(0, ${height})`)
                .call(d3.axisBottom(xScale));

            chartComments.selectAll()
                .data(months)
                .enter()
                .append('rect')
                .attr('x', (g) => xScale(g.Month))
                .attr('y', (g) => height - ((g.Count / maxSize ) * height))
                .attr('height', (g) => ((g.Count / maxSize) * height))
                .attr('width', xScale.bandwidth());

            chartComments.selectAll()
                .data(months).enter().append('text')
                .attr('class', 'divergence')
                .attr('x', (g) => xScale(g.Month) + xScale.bandwidth() / 2)
                .attr('y', (g) => height - ((g.Count / maxSize) * height) + 20)
                .attr('fill', 'white')
                .attr('text-anchor', 'middle')
                .text((g, idx) => {
                    var divergence = (g.Count);
                    var text = '';
                    if (divergence > 0);
                    text += `${divergence}`;
                    return text;
                });
                

        });
</script>

