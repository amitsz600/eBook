@model eBook.Models.Book
@using eBook.App_Start

@{
    ViewBag.Title = @Html.DisplayFor(model => model.Title);
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div>
    <h4>@Html.DisplayFor(model => model.Title)'s Details</h4>
    <hr />
    <dl class="dl-horizontal">

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Author)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Author)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Price)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Price)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.genre)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.genre)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.publisher)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.publisher)
        </dd>

        @if (!string.IsNullOrWhiteSpace(Model.Image))
        {
        <dt>
            @Html.DisplayNameFor(model => model.Image)
        </dt>

        <dd>
            <img src="@Html.DisplayFor(model => model.Image)" class="book-pic" />

        </dd>
        }
        @if (string.IsNullOrWhiteSpace(Model.Image))
        {
        <dt>
            @Html.DisplayNameFor(model => model.Image)
        </dt>

        <dd>
            <img src="~/Content/images/book.jpg" alt="No Image" class="book-pic" />

        </dd>
        }

        @if (!string.IsNullOrWhiteSpace(Model.Video))
        {
        <dt>
            @Html.DisplayNameFor(model => model.Video)
        </dt>


        <dd>
            @Html.DisplayFor(model => model.Video)
        </dd>
        }

        @if (!string.IsNullOrWhiteSpace(Model.TwitterWidgets))
        {
        <dt>
            @Html.DisplayNameFor(model => model.TwitterWidgets)
        </dt>
        <dd>
            @Html.Raw(@Model.TwitterWidgets.ToString())
        </dd>
        }
    </dl>
</div>
<p>
    @if (User.Identity.IsAuthenticated)
    {
    @Html.ActionLink("Edit", "Edit", new { id = Model.ProductId })
    }

    @if (User.IsInRole(IdentityConfigGlobals.MANAGER_ROLE))
    {
    <span> | </span>
    @Html.ActionLink("Delete", "Delete", new { id = Model.ProductId })
    }

</p>

<h2>Comments</h2>

@if (User.Identity.IsAuthenticated)
{
<p>
    <button id="createCommentButton" class="btn btn-info" type="button" onclick="OpenCrateComment()">
        Create Comment
    </button>
</p>

<div class="collapse" id="createComment">
    <p>
        @Html.Partial("~/Views/Comments/Create.cshtml", new eBook.Models.Comment() { ProductId = Model.ProductId })
    </p>
</div>
}

<div id="comments">
</div>

@Scripts.Render("~/bundles/modernizr")
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/bootstrap")
@Scripts.Render("~/bundles/d3")
@Scripts.Render("~/bundles/jqueryunobtrusive")

<script type="text/javascript">
    $(function () {
        LoadData();
    });

    function LoadData() {
        $.ajax({
            type: 'GET',
            url: '@Url.Action("Index", "Comments", new {ProductId = Model.ProductId})',
            dataType: 'html',
            data: { id: '' },
            success: function (data) {
                $('#comments').html(data);
            },
            error: function (ex) {
                var r = jQuery.parseJSON(response.responseText);
                alert("Message: " + r.Message);
                alert("StackTrace: " + r.StackTrace);
                alert("ExceptionType: " + r.ExceptionType);
            }
        });
        return false;
    }

    function OpenCrateComment() {
        $("#createComment").collapse('show');
        $("#createCommentButton").hide();
    }

</script>  